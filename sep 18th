import java.util.*;

class Solution {
    public ArrayList<Integer> nextGreater(int[] arr) {
        int n = arr.length;
        ArrayList<Integer> res = new ArrayList<>(Collections.nCopies(n, -1));
        Stack<Integer> st = new Stack<>();

        // Traverse 2n-1 to 0
        for (int i = 2 * n - 1; i >= 0; i--) {
            int idx = i % n; // circular index

            // maintain decreasing stack
            while (!st.isEmpty() && arr[st.peek()] <= arr[idx]) {
                st.pop();
            }

            // only fill result for first pass
            if (i < n) {
                if (!st.isEmpty()) {
                    res.set(idx, arr[st.peek()]);
                } else {
                    res.set(idx, -1);
                }
            }

            // push current index
            st.push(idx);
        }

        return res;
    }
}

/Next Greater Element in Circular Arra
