import java.util.*;

class Solution {
    public int subarrayBitwiseORs(int[] arr) {
        Set<Integer> res = new HashSet<>();
        Set<Integer> prev = new HashSet<>();

        for (int num : arr) {
            Set<Integer> curr = new HashSet<>();
            curr.add(num);  // Start new subarray with the current element

            for (int val : prev) {
                curr.add(val | num);  // Extend all previous subarrays
            }

            res.addAll(curr);  // Add current OR results to the result set
            prev = curr;       // Move to next index
        }

        return res.size();  // Total unique OR values
    }
}




// 898. Bitwise ORs of Subarrays
Solved
Medium
Topics
premium lock icon
Companies
Given an integer array arr, return the number of distinct bitwise ORs of all the non-empty subarrays of arr.

The bitwise OR of a subarray is the bitwise OR of each integer in the subarray. The bitwise OR of a subarray of one integer is that integer.

A subarray is a contiguous non-empty sequence of elements within an array.

 

Example 1:

Input: arr = [0]
Output: 1
Explanation: There is only one possible result: 0.///


  
