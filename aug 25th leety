class Solution {
    public int[] findDiagonalOrder(int[][] mat) {
        int m = mat.length, n = mat[0].length;
        int[] result = new int[m * n];
        
        int i = 0, j = 0, dir = 1; // 1 = up-right, -1 = down-left
        int idx = 0;
        
        while (idx < m * n) {
            result[idx++] = mat[i][j];
            
            if (dir == 1) { // up-right
                if (j == n - 1) { // last column
                    i++;
                    dir = -1;
                } else if (i == 0) { // top row
                    j++;
                    dir = -1;
                } else {
                    i--;
                    j++;
                }
            } else { // dir == -1 (down-left)
                if (i == m - 1) { // last row
                    j++;
                    dir = 1;
                } else if (j == 0) { // first column
                    i++;
                    dir = 1;
                } else {
                    i++;
                    j--;
                }
            }
        }
        return result;
    }
}



Given an m x n matrix mat, return an array of all the elements of the array in a diagonal order.Given an m x n matrix mat, return an array of all the elements of the array in a diagonal order.
